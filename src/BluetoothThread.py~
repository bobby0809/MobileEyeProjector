from bluetooth import *
import threading, Queue, time

class BluetoothThread(threading.Thread):

    def __init__(self, inQueue, outQueue):
        threading.Thread.__init__(self)
        self.inQueue = inQueue
        self.outQueue = outQueue
    
    # On run we try to connect to bluetooth and set up UI
    def run(self):
        server_sock=BluetoothSocket( RFCOMM )
        server_sock.bind(("",PORT_ANY))
        server_sock.listen(1)
        
        port = server_sock.getsockname()[1]
        
        uuid = "00001101-0000-1000-8000-00805F9B34FB"
        
        advertise_service(
                server_sock,
                "GauntFaceServer",
                service_id = uuid,
                service_classes = [uuid, SERIAL_PORT_CLASS],
                profiles = [SERIAL_PORT_PROFILE]
            )
        
        """try:
            run = True
            while run:
                print "Waiting for connection on RFCOMM channel %d" % port
                client_sock, client_info = server_sock.accept()
                
                print "Accepted Connection from ", client_info
                
                try:
                    while True:
                        data = client_sock.recv(1024)
                        if len(data) == 0:
                            break
                        print "Received [%s]" % data
                except IOError:
                    pass
                
        except IOError:
            pass"""
